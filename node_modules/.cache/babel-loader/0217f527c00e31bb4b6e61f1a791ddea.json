{"ast":null,"code":"var _jsxFileName = \"/home/mishka/Dev/amanStart/todo/todo-app/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport \"./App.css\";\nimport TodoList from \"./components/todoList\";\nimport database from \"./firebase_init\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  // state managment\n  const [todos, setTodo] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [input_day, setInput_day] = useState(\"\");\n  const [input_name, setInput_name] = useState(\"\");\n  const [input_ploga, setInput_ploga] = useState(\"\");\n  const [input_member, setInput_member] = useState(\"\"); // hook to det data from database\n\n  useEffect(() => {\n    database.collection(\"todos\").orderBy(\"timeStamp\", \"desc\").onSnapshot(Snapshot => {\n      setTodo(Snapshot.docs.map(todo => ({\n        id: todo.id,\n        todo: todo.data().todo\n      })));\n    });\n  }, []); // function to add todo to our database\n\n  const Addtodo = event => {\n    event.preventDefault();\n\n    if (input !== \"\") {\n      database.collection(\"todos\").add({\n        todo: input,\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    setInput(\"\");\n  }; // funciton to delete all todo one by one\n\n\n  const deleteAll = () => {\n    for (let i = 0; i < todos.length; i++) {\n      database.collection(\"todos\").doc(todos[i].id).delete();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Here are the things TO-DO \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"getinput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"todo-input\",\n    id: \"standard-basic\",\n    label: \"name\",\n    type: \"text\",\n    value: input_name,\n    onChange: event => setInput_name(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"form-btn\",\n    variant: \"outlined\",\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: Addtodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Add todo\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todolist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"TODOS\"), todos.map(todo => /*#__PURE__*/React.createElement(TodoList, {\n    text: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: \"delete-all\",\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: deleteAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Delete All\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mishka/Dev/amanStart/todo/todo-app/src/App.js"],"names":["React","useState","useEffect","firebase","TodoList","database","Button","TextField","App","todos","setTodo","input","setInput","input_day","setInput_day","input_name","setInput_name","input_ploga","setInput_ploga","input_member","setInput_member","collection","orderBy","onSnapshot","Snapshot","docs","map","todo","id","data","Addtodo","event","preventDefault","add","timeStamp","firestore","FieldValue","serverTimestamp","deleteAll","i","length","doc","delete","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport \"./App.css\";\nimport TodoList from \"./components/todoList\";\nimport database from \"./firebase_init\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nfunction App() {\n  // state managment\n  const [todos, setTodo] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [input_day, setInput_day] = useState(\"\");\n  const [input_name, setInput_name] = useState(\"\");\n  const [input_ploga, setInput_ploga] = useState(\"\");\n  const [input_member, setInput_member] = useState(\"\");\n\n  // hook to det data from database\n  useEffect(() => {\n    database\n      .collection(\"todos\")\n      .orderBy(\"timeStamp\", \"desc\")\n      .onSnapshot((Snapshot) => {\n        setTodo(\n          Snapshot.docs.map((todo) => ({ id: todo.id, todo: todo.data().todo }))\n        );\n      });\n  }, []);\n\n  // function to add todo to our database\n  const Addtodo = (event) => {\n    event.preventDefault();\n    if (input !== \"\") {\n      database.collection(\"todos\").add({\n        todo: input,\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    setInput(\"\");\n  };\n\n  // funciton to delete all todo one by one\n  const deleteAll = () => {\n    for (let i = 0; i < todos.length; i++) {\n      database.collection(\"todos\").doc(todos[i].id).delete();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">Here are the things TO-DO </h1>\n      <form className=\"getinput\">\n        <TextField\n          className=\"todo-input\"\n          id=\"standard-basic\"\n          label=\"name\"\n          type=\"text\"\n          value={input_name}\n          onChange={(event) => setInput_name(event.target.value)}\n        />\n        <Button\n          className=\"form-btn\"\n          variant=\"outlined\"\n          type=\"submit\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={Addtodo}\n        >\n          Add todo\n        </Button>\n      </form>\n      <div className=\"todolist\">\n        <h3>TODOS</h3>\n        {todos.map((todo) => (\n          <TodoList text={todo} />\n        ))}\n      </div>\n      <Button\n        className=\"delete-all\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={deleteAll}\n      >\n        Delete All\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}